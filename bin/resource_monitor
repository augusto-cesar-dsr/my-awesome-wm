#!/bin/bash

# AwesomeWM Resource Monitor
# Monitora recursos do sistema e envia notificações quando necessário

# Configurações
CPU_THRESHOLD=85
MEMORY_THRESHOLD=85
DISK_THRESHOLD=90
TEMP_THRESHOLD=75

# Função para enviar notificação
send_notification() {
    local title="$1"
    local message="$2"
    local urgency="$3"
    
    notify-send -u "$urgency" -t 5000 "🖥️ $title" "$message"
}

# Verificar CPU
check_cpu() {
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
    cpu_usage=${cpu_usage%.*} # Remove decimal
    
    if [ "$cpu_usage" -gt "$CPU_THRESHOLD" ]; then
        send_notification "CPU Alert" "CPU usage is ${cpu_usage}% (threshold: ${CPU_THRESHOLD}%)" "critical"
    fi
}

# Verificar Memória
check_memory() {
    local memory_usage=$(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100.0}')
    
    if [ "$memory_usage" -gt "$MEMORY_THRESHOLD" ]; then
        send_notification "Memory Alert" "Memory usage is ${memory_usage}% (threshold: ${MEMORY_THRESHOLD}%)" "critical"
    fi
}

# Verificar Disco
check_disk() {
    local disk_usage=$(df -h / | awk 'NR==2{print $5}' | sed 's/%//')
    
    if [ "$disk_usage" -gt "$DISK_THRESHOLD" ]; then
        send_notification "Disk Alert" "Disk usage is ${disk_usage}% (threshold: ${DISK_THRESHOLD}%)" "critical"
    fi
}

# Verificar Temperatura (se disponível)
check_temperature() {
    if command -v sensors >/dev/null 2>&1; then
        local temp=$(sensors | grep -E "Core 0|Package id 0" | head -1 | grep -oP '\+\K[0-9]+' | head -1)
        
        if [ -n "$temp" ] && [ "$temp" -gt "$TEMP_THRESHOLD" ]; then
            send_notification "Temperature Alert" "CPU temperature is ${temp}°C (threshold: ${TEMP_THRESHOLD}°C)" "critical"
        fi
    fi
}

# Verificar Bateria (se laptop)
check_battery() {
    if [ -d "/sys/class/power_supply/BAT0" ] || [ -d "/sys/class/power_supply/BAT1" ]; then
        local battery_level=$(acpi -b 2>/dev/null | grep -oP '\d+(?=%)' | head -1)
        local battery_status=$(acpi -b 2>/dev/null | grep -oP '(Charging|Discharging|Full)' | head -1)
        
        if [ -n "$battery_level" ]; then
            if [ "$battery_level" -le 15 ] && [ "$battery_status" = "Discharging" ]; then
                send_notification "Battery Critical" "Battery level is ${battery_level}% and discharging!" "critical"
            elif [ "$battery_level" -le 25 ] && [ "$battery_status" = "Discharging" ]; then
                send_notification "Battery Low" "Battery level is ${battery_level}%" "normal"
            fi
        fi
    fi
}

# Modo de execução
case "${1:-monitor}" in
    "monitor")
        # Execução contínua (para usar com timer)
        check_cpu
        check_memory
        check_disk
        check_temperature
        check_battery
        ;;
    "status")
        # Mostrar status atual
        echo "🖥️  System Resource Status"
        echo "=========================="
        
        # CPU
        local cpu_usage=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
        echo "CPU: ${cpu_usage%.*}%"
        
        # Memory
        local memory_usage=$(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100.0}')
        echo "Memory: ${memory_usage}%"
        
        # Disk
        local disk_usage=$(df -h / | awk 'NR==2{print $5}')
        echo "Disk: ${disk_usage}"
        
        # Temperature
        if command -v sensors >/dev/null 2>&1; then
            local temp=$(sensors | grep -E "Core 0|Package id 0" | head -1 | grep -oP '\+\K[0-9]+' | head -1)
            [ -n "$temp" ] && echo "Temperature: ${temp}°C"
        fi
        
        # Battery
        if command -v acpi >/dev/null 2>&1; then
            local battery_info=$(acpi -b 2>/dev/null | head -1)
            [ -n "$battery_info" ] && echo "Battery: $battery_info"
        fi
        ;;
    "help")
        echo "AwesomeWM Resource Monitor"
        echo "Usage: $0 [monitor|status|help]"
        echo ""
        echo "Commands:"
        echo "  monitor  - Run monitoring checks (default)"
        echo "  status   - Show current system status"
        echo "  help     - Show this help message"
        echo ""
        echo "Thresholds:"
        echo "  CPU: ${CPU_THRESHOLD}%"
        echo "  Memory: ${MEMORY_THRESHOLD}%"
        echo "  Disk: ${DISK_THRESHOLD}%"
        echo "  Temperature: ${TEMP_THRESHOLD}°C"
        ;;
esac
